generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id       String  @id @default(uuid())
  name     String
  username String  @unique
  email    String  @unique
  image    String?
  password String?

  role Role @default(USER)

  lastLogin     DateTime[]
  emailVerified DateTime?

  oneTimePassword String @default(uuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  account        Account[]
  profile        Profile?
  contestRatings contestRatings[]
  CodingProfiles CodingProfiles?
}

model Profile {
  id String @id @default(uuid())

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  bio String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                String  @id @default(uuid())
  type              String
  provider          String
  providerAccountId String
  token_type        String?
  refresh_token     String?
  access_token      String?
  id_token          String?
  scope             String?
  session_state     String?
  expires_at        Int?

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique

  @@unique([provider, providerAccountId])
}

model Contests {
  id         String   @id @default(uuid())
  contest_id String   @unique
  name       String
  href       String
  host       String

  calendarEvents CalendarEvents[]

  startTime  DateTime
  endTime    DateTime
  duration   Int
}

model contestRatings {
  id String @id @default(uuid())

  user   User   @relation(fields: [userId], references: [id])
  userId String

  codeChefRating      Int?
  codeforcesRating    Int?
  leetCodeRating      Int?
  atCoderRating       Int?
  geeksForGeeksRating Int?
  HackerearthRating   Int?
}

model CodingProfiles {
  id String @id @default(uuid())

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique
  
  CodeChef      String?
  Codeforces    String?
  LeetCode      String?
  AtCoder       String?
  GeeksForGeeks String?
  Hackerearth   String?
}


model CalendarEvents {
  id String @id @default(uuid())

  contestId String
  contest Contests @relation(fields: [contestId], references: [id])

  eventId String @unique
  calendarId String
  eventlink String

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("calendar_events")
}